<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

        <!-- 주로, service, repository(dao), db, log 등을 설정  비즈니스 로직 관련-->


   <!-- 스프링에서 관리하는 bean의 기본 패키지 설정, 해당 패키지 아래에 있는 컴포넌트들을 검색해 빈 객체로 등록해줌 -->
   <!-- spring 2.5 부터 지원, package 하위에 @Component 또는 Component를 상속받은 Annotation들(repository, service 등) 을 찾아 Bean으로 등록한다-->
   <context:component-scan base-package = "com.jeon.springxml">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
 </context:component-scan>

   <context:property-placeholder location="classpath:config/*"/>

   <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

</beans>